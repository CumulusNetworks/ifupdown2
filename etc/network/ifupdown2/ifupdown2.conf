#
# ifupdown2 configuration file
#
# This file contains default settings for ifupdown
#

# enable persistent ifupdown2 debug logs
# ifupdown2 will keep debug logs in /etc/network/ifupdown2/logs
# by default the last 42 configurations logs will be kept.
# yes     - (default) enable persistent logging (42 configs)
# no      - disable persistent logging
# [2-9]+  - specify how many configuration logs should be stored
enable_persistent_debug_logging=yes

# use ifupdown2d
use_daemon=no

# enable templates
template_enable=1

# default template engine (only mako is currently supported)
template_engine=mako

# default template lookup path during template rendering
template_lookuppath=/etc/network/ifupdown2/templates

# default network configuration filepath
default_interfaces_configfile=/etc/network/interfaces

# The -i interfacefile option is allowed by default but
# can be disabled by setting the below option to 1 to
# reduce security issues (due to the pre- and post- commands)
disable_cli_interfacesfile=0


# enable addon module syntax check:
# Python addon modules register dictionary of supported attributes.
# The syntax checker in ifupdown2 uses this dictionary for syntax
# checks in the interfaces file. This works well, when only python modules
# are used. But when a mix of scripts and modules are used (which is the
# default case), you may get false warnings for attributes supported
# by scripts
addon_syntax_check=1

# Support executing of ifupdown style scripts.
# Note that by default python addon modules override scripts with the same
# name
addon_scripts_support=0

# enable python addons
addon_python_modules_support=1

# Originally ifupdown2 only supported a single vlan filtering bridge on the
# system. We now support multiple vlan aware bridges in the system. To move
# back to a single vlan aware bridge, please set this variable to 0.
multiple_vlan_aware_bridge_support=1

# ifquery check status strings.
# By default `ifquery --check` prints the check and
# cross marks against interface attributes.
# Use the below strings to modify the default behaviour.
#
ifquery_check_success_str=pass
ifquery_check_error_str=fail
ifquery_check_unknown_str=
#

# This attribute controls iface/vlan range expansions
# in ifquery default output.
ifquery_ifacename_expand_range=0

# Let link master (bridges, bonds) own the link state of slaves
link_master_slave=1

# Delay admin state change till the end
delay_admin_state_change=0

# ifreload by default downs: 'all interfaces for which config changed' +
# 'interfaces that were deleted'. With the below variable set to '0'
# ifreload will only down 'interfaces that were deleted'
ifreload_down_changed=0

# squash all addr config when you process the first interface
addr_config_squash=0

# squash iface config into one when you have multiple
# ifaces stanzas for an interface
ifaceobj_squash=0

# By default ifupdown2 will adjust logical devices MTU
# based on the physical interface they are running on top of.
# set this flag to 0 to disable this behaviour
adjust_logical_dev_mtu=1

# directory where the state file is stored
# if this directory doesn't exists ifupdown2 will create it
# if directory creation fails or state_dir variable is empty
# state_dir will default to /var/tmp/network/
state_dir=/var/tmp/network/
